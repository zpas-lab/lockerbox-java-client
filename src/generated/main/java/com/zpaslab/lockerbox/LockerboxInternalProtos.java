// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal.proto

package com.zpaslab.lockerbox;

public final class LockerboxInternalProtos {
  private LockerboxInternalProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CashCassetteEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lockerbox.CashCassetteEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string code = 5;</code>
     */
    boolean hasCode();
    /**
     * <code>optional string code = 5;</code>
     */
    java.lang.String getCode();
    /**
     * <code>optional string code = 5;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
     */
    com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type getType();

    /**
     * <code>optional string date = 2;</code>
     */
    boolean hasDate();
    /**
     * <code>optional string date = 2;</code>
     */
    java.lang.String getDate();
    /**
     * <code>optional string date = 2;</code>
     */
    com.google.protobuf.ByteString
        getDateBytes();

    /**
     * <code>optional int32 capacity = 3;</code>
     *
     * <pre>
     * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
     * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
     * </pre>
     */
    boolean hasCapacity();
    /**
     * <code>optional int32 capacity = 3;</code>
     *
     * <pre>
     * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
     * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
     * </pre>
     */
    int getCapacity();

    /**
     * <code>optional string lockerbox_name = 4;</code>
     *
     * <pre>
     * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
     * TODO(mateuszc): optional string collector_name;
     * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
     * </pre>
     */
    boolean hasLockerboxName();
    /**
     * <code>optional string lockerbox_name = 4;</code>
     *
     * <pre>
     * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
     * TODO(mateuszc): optional string collector_name;
     * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
     * </pre>
     */
    java.lang.String getLockerboxName();
    /**
     * <code>optional string lockerbox_name = 4;</code>
     *
     * <pre>
     * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
     * TODO(mateuszc): optional string collector_name;
     * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
     * </pre>
     */
    com.google.protobuf.ByteString
        getLockerboxNameBytes();
  }
  /**
   * Protobuf type {@code lockerbox.CashCassetteEvent}
   *
   * <pre>
   * CashCassetteEvent describes a noteworthy event in lifetime of a cash terminal's bill collecting cassette.
   * Full history of events enables calculating current status and contents of a CashCassette, while also
   * allowing for historical monitoring/tracking.
   * Next id: 6
   * </pre>
   */
  public static final class CashCassetteEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:lockerbox.CashCassetteEvent)
      CashCassetteEventOrBuilder {
    // Use CashCassetteEvent.newBuilder() to construct.
    private CashCassetteEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CashCassetteEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CashCassetteEvent defaultInstance;
    public static CashCassetteEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CashCassetteEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CashCassetteEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type value = com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              date_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              capacity_ = input.readInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              lockerboxName_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              code_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.class, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CashCassetteEvent> PARSER =
        new com.google.protobuf.AbstractParser<CashCassetteEvent>() {
      public CashCassetteEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CashCassetteEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CashCassetteEvent> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code lockerbox.CashCassetteEvent.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DETECTED_REMOVED = 1;</code>
       *
       * <pre>
       * "Detected" events are auto-detected via hardware channels.
       * </pre>
       */
      DETECTED_REMOVED(0, 1),
      /**
       * <code>DETECTED_INSERTED = 2;</code>
       */
      DETECTED_INSERTED(1, 2),
      /**
       * <code>DETECTED_ERROR = 3;</code>
       */
      DETECTED_ERROR(2, 3),
      /**
       * <code>CLAIMED_EMPTIED = 4;</code>
       *
       * <pre>
       * "Claimed" events are reported by user/collector, because we don't
       * have a way to confirm/detect them via hardware.
       * </pre>
       */
      CLAIMED_EMPTIED(3, 4),
      /**
       * <code>CLAIMED_NON_EMPTIED = 5;</code>
       */
      CLAIMED_NON_EMPTIED(4, 5),
      /**
       * <code>CLAIMED_TAKEN = 6;</code>
       */
      CLAIMED_TAKEN(5, 6),
      /**
       * <code>CLAIMED_ERROR = 7;</code>
       */
      CLAIMED_ERROR(6, 7),
      ;

      /**
       * <code>DETECTED_REMOVED = 1;</code>
       *
       * <pre>
       * "Detected" events are auto-detected via hardware channels.
       * </pre>
       */
      public static final int DETECTED_REMOVED_VALUE = 1;
      /**
       * <code>DETECTED_INSERTED = 2;</code>
       */
      public static final int DETECTED_INSERTED_VALUE = 2;
      /**
       * <code>DETECTED_ERROR = 3;</code>
       */
      public static final int DETECTED_ERROR_VALUE = 3;
      /**
       * <code>CLAIMED_EMPTIED = 4;</code>
       *
       * <pre>
       * "Claimed" events are reported by user/collector, because we don't
       * have a way to confirm/detect them via hardware.
       * </pre>
       */
      public static final int CLAIMED_EMPTIED_VALUE = 4;
      /**
       * <code>CLAIMED_NON_EMPTIED = 5;</code>
       */
      public static final int CLAIMED_NON_EMPTIED_VALUE = 5;
      /**
       * <code>CLAIMED_TAKEN = 6;</code>
       */
      public static final int CLAIMED_TAKEN_VALUE = 6;
      /**
       * <code>CLAIMED_ERROR = 7;</code>
       */
      public static final int CLAIMED_ERROR_VALUE = 7;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return DETECTED_REMOVED;
          case 2: return DETECTED_INSERTED;
          case 3: return DETECTED_ERROR;
          case 4: return CLAIMED_EMPTIED;
          case 5: return CLAIMED_NON_EMPTIED;
          case 6: return CLAIMED_TAKEN;
          case 7: return CLAIMED_ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:lockerbox.CashCassetteEvent.Type)
    }

    private int bitField0_;
    public static final int CODE_FIELD_NUMBER = 5;
    private java.lang.Object code_;
    /**
     * <code>optional string code = 5;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string code = 5;</code>
     */
    public java.lang.String getCode() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          code_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string code = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      java.lang.Object ref = code_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type type_;
    /**
     * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
     */
    public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type getType() {
      return type_;
    }

    public static final int DATE_FIELD_NUMBER = 2;
    private java.lang.Object date_;
    /**
     * <code>optional string date = 2;</code>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string date = 2;</code>
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          date_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string date = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAPACITY_FIELD_NUMBER = 3;
    private int capacity_;
    /**
     * <code>optional int32 capacity = 3;</code>
     *
     * <pre>
     * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
     * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
     * </pre>
     */
    public boolean hasCapacity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 capacity = 3;</code>
     *
     * <pre>
     * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
     * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
     * </pre>
     */
    public int getCapacity() {
      return capacity_;
    }

    public static final int LOCKERBOX_NAME_FIELD_NUMBER = 4;
    private java.lang.Object lockerboxName_;
    /**
     * <code>optional string lockerbox_name = 4;</code>
     *
     * <pre>
     * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
     * TODO(mateuszc): optional string collector_name;
     * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
     * </pre>
     */
    public boolean hasLockerboxName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string lockerbox_name = 4;</code>
     *
     * <pre>
     * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
     * TODO(mateuszc): optional string collector_name;
     * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
     * </pre>
     */
    public java.lang.String getLockerboxName() {
      java.lang.Object ref = lockerboxName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lockerboxName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string lockerbox_name = 4;</code>
     *
     * <pre>
     * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
     * TODO(mateuszc): optional string collector_name;
     * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLockerboxNameBytes() {
      java.lang.Object ref = lockerboxName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lockerboxName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      code_ = "";
      type_ = com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type.DETECTED_REMOVED;
      date_ = "";
      capacity_ = 0;
      lockerboxName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(2, getDateBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(3, capacity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(4, getLockerboxNameBytes());
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(5, getCodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDateBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, capacity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getLockerboxNameBytes());
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lockerbox.CashCassetteEvent}
     *
     * <pre>
     * CashCassetteEvent describes a noteworthy event in lifetime of a cash terminal's bill collecting cassette.
     * Full history of events enables calculating current status and contents of a CashCassette, while also
     * allowing for historical monitoring/tracking.
     * Next id: 6
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lockerbox.CashCassetteEvent)
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.class, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder.class);
      }

      // Construct using com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type.DETECTED_REMOVED;
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        capacity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        lockerboxName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEvent_descriptor;
      }

      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent getDefaultInstanceForType() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.getDefaultInstance();
      }

      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent build() {
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent buildPartial() {
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent result = new com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.capacity_ = capacity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lockerboxName_ = lockerboxName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent) {
          return mergeFrom((com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent other) {
        if (other == com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.getDefaultInstance()) return this;
        if (other.hasCode()) {
          bitField0_ |= 0x00000001;
          code_ = other.code_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDate()) {
          bitField0_ |= 0x00000004;
          date_ = other.date_;
          onChanged();
        }
        if (other.hasCapacity()) {
          setCapacity(other.getCapacity());
        }
        if (other.hasLockerboxName()) {
          bitField0_ |= 0x00000010;
          lockerboxName_ = other.lockerboxName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object code_ = "";
      /**
       * <code>optional string code = 5;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string code = 5;</code>
       */
      public java.lang.String getCode() {
        java.lang.Object ref = code_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            code_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string code = 5;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        java.lang.Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string code = 5;</code>
       */
      public Builder setCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string code = 5;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string code = 5;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }

      private com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type type_ = com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type.DETECTED_REMOVED;
      /**
       * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
       */
      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type getType() {
        return type_;
      }
      /**
       * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
       */
      public Builder setType(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .lockerbox.CashCassetteEvent.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Type.DETECTED_REMOVED;
        onChanged();
        return this;
      }

      private java.lang.Object date_ = "";
      /**
       * <code>optional string date = 2;</code>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string date = 2;</code>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            date_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string date = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string date = 2;</code>
       */
      public Builder setDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string date = 2;</code>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string date = 2;</code>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }

      private int capacity_ ;
      /**
       * <code>optional int32 capacity = 3;</code>
       *
       * <pre>
       * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
       * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
       * </pre>
       */
      public boolean hasCapacity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 capacity = 3;</code>
       *
       * <pre>
       * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
       * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
       * </pre>
       */
      public int getCapacity() {
        return capacity_;
      }
      /**
       * <code>optional int32 capacity = 3;</code>
       *
       * <pre>
       * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
       * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
       * </pre>
       */
      public Builder setCapacity(int value) {
        bitField0_ |= 0x00000008;
        capacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 capacity = 3;</code>
       *
       * <pre>
       * capacity must be set only for CLAIMED_EMPTIED and CLAIMED_NON_EMPTIED
       * TODO(mateuszc): ideally, capacity would be set only for DETECTED_INSERTED
       * </pre>
       */
      public Builder clearCapacity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        capacity_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object lockerboxName_ = "";
      /**
       * <code>optional string lockerbox_name = 4;</code>
       *
       * <pre>
       * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
       * TODO(mateuszc): optional string collector_name;
       * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
       * </pre>
       */
      public boolean hasLockerboxName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string lockerbox_name = 4;</code>
       *
       * <pre>
       * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
       * TODO(mateuszc): optional string collector_name;
       * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
       * </pre>
       */
      public java.lang.String getLockerboxName() {
        java.lang.Object ref = lockerboxName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lockerboxName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string lockerbox_name = 4;</code>
       *
       * <pre>
       * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
       * TODO(mateuszc): optional string collector_name;
       * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLockerboxNameBytes() {
        java.lang.Object ref = lockerboxName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lockerboxName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string lockerbox_name = 4;</code>
       *
       * <pre>
       * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
       * TODO(mateuszc): optional string collector_name;
       * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
       * </pre>
       */
      public Builder setLockerboxName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        lockerboxName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string lockerbox_name = 4;</code>
       *
       * <pre>
       * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
       * TODO(mateuszc): optional string collector_name;
       * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
       * </pre>
       */
      public Builder clearLockerboxName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lockerboxName_ = getDefaultInstance().getLockerboxName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string lockerbox_name = 4;</code>
       *
       * <pre>
       * TODO(mateuszc): repeated PaymentInstrumentCount { PaymentInstrument; count; }
       * TODO(mateuszc): optional string collector_name;
       * TODO(mateuszc): optional string slot; // e.g. "ccnet_bv", "coin-o-matic left", "supercoin 5-10 BYN"
       * </pre>
       */
      public Builder setLockerboxNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        lockerboxName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lockerbox.CashCassetteEvent)
    }

    static {
      defaultInstance = new CashCassetteEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lockerbox.CashCassetteEvent)
  }

  public interface CashCassetteEventListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:lockerbox.CashCassetteEventList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    java.util.List<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent> 
        getEventList();
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent getEvent(int index);
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    int getEventCount();
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    java.util.List<? extends com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder> 
        getEventOrBuilderList();
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder getEventOrBuilder(
        int index);

    /**
     * <code>optional int32 total = 2;</code>
     */
    boolean hasTotal();
    /**
     * <code>optional int32 total = 2;</code>
     */
    int getTotal();
  }
  /**
   * Protobuf type {@code lockerbox.CashCassetteEventList}
   */
  public static final class CashCassetteEventList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:lockerbox.CashCassetteEventList)
      CashCassetteEventListOrBuilder {
    // Use CashCassetteEventList.newBuilder() to construct.
    private CashCassetteEventList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CashCassetteEventList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CashCassetteEventList defaultInstance;
    public static CashCassetteEventList getDefaultInstance() {
      return defaultInstance;
    }

    public CashCassetteEventList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CashCassetteEventList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                event_ = new java.util.ArrayList<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              event_.add(input.readMessage(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              total_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          event_ = java.util.Collections.unmodifiableList(event_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEventList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEventList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.class, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.Builder.class);
    }

    public static com.google.protobuf.Parser<CashCassetteEventList> PARSER =
        new com.google.protobuf.AbstractParser<CashCassetteEventList>() {
      public CashCassetteEventList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CashCassetteEventList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CashCassetteEventList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENT_FIELD_NUMBER = 1;
    private java.util.List<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent> event_;
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    public java.util.List<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent> getEventList() {
      return event_;
    }
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    public java.util.List<? extends com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder> 
        getEventOrBuilderList() {
      return event_;
    }
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    public int getEventCount() {
      return event_.size();
    }
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent getEvent(int index) {
      return event_.get(index);
    }
    /**
     * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
     */
    public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder getEventOrBuilder(
        int index) {
      return event_.get(index);
    }

    public static final int TOTAL_FIELD_NUMBER = 2;
    private int total_;
    /**
     * <code>optional int32 total = 2;</code>
     */
    public boolean hasTotal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 total = 2;</code>
     */
    public int getTotal() {
      return total_;
    }

    private void initFields() {
      event_ = java.util.Collections.emptyList();
      total_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < event_.size(); i++) {
        output.writeMessage(1, event_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, total_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < event_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, event_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, total_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code lockerbox.CashCassetteEventList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:lockerbox.CashCassetteEventList)
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEventList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEventList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.class, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.Builder.class);
      }

      // Construct using com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEventFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (eventBuilder_ == null) {
          event_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          eventBuilder_.clear();
        }
        total_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.internal_static_lockerbox_CashCassetteEventList_descriptor;
      }

      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList getDefaultInstanceForType() {
        return com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.getDefaultInstance();
      }

      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList build() {
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList buildPartial() {
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList result = new com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (eventBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            event_ = java.util.Collections.unmodifiableList(event_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.event_ = event_;
        } else {
          result.event_ = eventBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.total_ = total_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList) {
          return mergeFrom((com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList other) {
        if (other == com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList.getDefaultInstance()) return this;
        if (eventBuilder_ == null) {
          if (!other.event_.isEmpty()) {
            if (event_.isEmpty()) {
              event_ = other.event_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventIsMutable();
              event_.addAll(other.event_);
            }
            onChanged();
          }
        } else {
          if (!other.event_.isEmpty()) {
            if (eventBuilder_.isEmpty()) {
              eventBuilder_.dispose();
              eventBuilder_ = null;
              event_ = other.event_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEventFieldBuilder() : null;
            } else {
              eventBuilder_.addAllMessages(other.event_);
            }
          }
        }
        if (other.hasTotal()) {
          setTotal(other.getTotal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent> event_ =
        java.util.Collections.emptyList();
      private void ensureEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          event_ = new java.util.ArrayList<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent>(event_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder> eventBuilder_;

      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public java.util.List<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent> getEventList() {
        if (eventBuilder_ == null) {
          return java.util.Collections.unmodifiableList(event_);
        } else {
          return eventBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public int getEventCount() {
        if (eventBuilder_ == null) {
          return event_.size();
        } else {
          return eventBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent getEvent(int index) {
        if (eventBuilder_ == null) {
          return event_.get(index);
        } else {
          return eventBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder setEvent(
          int index, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.set(index, value);
          onChanged();
        } else {
          eventBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder setEvent(
          int index, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder addEvent(com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.add(value);
          onChanged();
        } else {
          eventBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder addEvent(
          int index, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.add(index, value);
          onChanged();
        } else {
          eventBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder addEvent(
          com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.add(builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder addEvent(
          int index, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder addAllEvent(
          java.lang.Iterable<? extends com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent> values) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, event_);
          onChanged();
        } else {
          eventBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder clearEvent() {
        if (eventBuilder_ == null) {
          event_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public Builder removeEvent(int index) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.remove(index);
          onChanged();
        } else {
          eventBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder getEventBuilder(
          int index) {
        return getEventFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder getEventOrBuilder(
          int index) {
        if (eventBuilder_ == null) {
          return event_.get(index);  } else {
          return eventBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public java.util.List<? extends com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder> 
           getEventOrBuilderList() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(event_);
        }
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder addEventBuilder() {
        return getEventFieldBuilder().addBuilder(
            com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder addEventBuilder(
          int index) {
        return getEventFieldBuilder().addBuilder(
            index, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .lockerbox.CashCassetteEvent event = 1;</code>
       */
      public java.util.List<com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder> 
           getEventBuilderList() {
        return getEventFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEvent.Builder, com.zpaslab.lockerbox.LockerboxInternalProtos.CashCassetteEventOrBuilder>(
                  event_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }

      private int total_ ;
      /**
       * <code>optional int32 total = 2;</code>
       */
      public boolean hasTotal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 total = 2;</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <code>optional int32 total = 2;</code>
       */
      public Builder setTotal(int value) {
        bitField0_ |= 0x00000002;
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 total = 2;</code>
       */
      public Builder clearTotal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        total_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:lockerbox.CashCassetteEventList)
    }

    static {
      defaultInstance = new CashCassetteEventList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:lockerbox.CashCassetteEventList)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lockerbox_CashCassetteEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lockerbox_CashCassetteEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_lockerbox_CashCassetteEventList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_lockerbox_CashCassetteEventList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016internal.proto\022\tlockerbox\"\250\002\n\021CashCass" +
      "etteEvent\022\014\n\004code\030\005 \001(\t\022/\n\004type\030\001 \001(\0162!." +
      "lockerbox.CashCassetteEvent.Type\022\014\n\004date" +
      "\030\002 \001(\t\022\020\n\010capacity\030\003 \001(\005\022\026\n\016lockerbox_na" +
      "me\030\004 \001(\t\"\233\001\n\004Type\022\024\n\020DETECTED_REMOVED\020\001\022" +
      "\025\n\021DETECTED_INSERTED\020\002\022\022\n\016DETECTED_ERROR" +
      "\020\003\022\023\n\017CLAIMED_EMPTIED\020\004\022\027\n\023CLAIMED_NON_E" +
      "MPTIED\020\005\022\021\n\rCLAIMED_TAKEN\020\006\022\021\n\rCLAIMED_E" +
      "RROR\020\007\"S\n\025CashCassetteEventList\022+\n\005event" +
      "\030\001 \003(\0132\034.lockerbox.CashCassetteEvent\022\r\n\005",
      "total\030\002 \001(\005B0\n\025com.zpaslab.lockerboxB\027Lo" +
      "ckerboxInternalProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_lockerbox_CashCassetteEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_lockerbox_CashCassetteEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_lockerbox_CashCassetteEvent_descriptor,
        new java.lang.String[] { "Code", "Type", "Date", "Capacity", "LockerboxName", });
    internal_static_lockerbox_CashCassetteEventList_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_lockerbox_CashCassetteEventList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_lockerbox_CashCassetteEventList_descriptor,
        new java.lang.String[] { "Event", "Total", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
